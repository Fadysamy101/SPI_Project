$date
	Thu Jul 17 22:23:41 2025
$end
$version
	QuestaSim Version 2021.1
$end
$timescale
	1ns
$end

$scope module Testbench $end
$var parameter 32 ! MEM_DEPTH $end
$var parameter 32 " ADDR_SIZE $end
$var parameter 32 # CLK_PERIOD $end
$var reg 1 $ clk $end
$var reg 1 % rst_n $end
$var reg 1 & MOSI $end
$var reg 1 ' MISO $end
$var reg 1 ( SS_N $end
$var reg 10 ) din_stimulus [9:0] $end

$scope module dut $end
$var parameter 32 * MEM_DEPTH $end
$var parameter 32 + ADDR_SIZE $end
$var wire 1 , clk $end
$var wire 1 - rst_n $end
$var wire 1 . MOSI $end
$var wire 1 / MISO $end
$var wire 1 0 SS_N $end
$var reg 8 1 din [7:0] $end
$var reg 8 2 dout [7:0] $end
$var reg 10 3 rx_data [9:0] $end
$var reg 1 4 rx_valid $end
$var reg 1 5 tx_valid $end

$scope module u_Single_port_Async_RAM $end
$var parameter 32 6 MEM_DEPTH $end
$var parameter 32 7 ADDR_SIZE $end
$var wire 1 , clk $end
$var wire 1 - rst_n $end
$var wire 1 8 din [9] $end
$var wire 1 9 din [8] $end
$var wire 1 : din [7] $end
$var wire 1 ; din [6] $end
$var wire 1 < din [5] $end
$var wire 1 = din [4] $end
$var wire 1 > din [3] $end
$var wire 1 ? din [2] $end
$var wire 1 @ din [1] $end
$var wire 1 A din [0] $end
$var wire 1 B rx_valid $end
$var reg 8 C dout [7:0] $end
$var reg 1 D tx_valid $end
$var reg 2 E Operation_Type [1:0] $end
$var reg 8 F Write_Address [7:0] $end
$var reg 8 G Read_Address [7:0] $end
$var reg 5 H counter [4:0] $end
$upscope $end

$scope module u_SPI_Slave_Interface $end
$var parameter 32 I ADDR_SIZE $end
$var wire 1 . MOSI $end
$var wire 1 0 SS_N $end
$var wire 1 J tx_valid $end
$var wire 1 K tx_data [7] $end
$var wire 1 L tx_data [6] $end
$var wire 1 M tx_data [5] $end
$var wire 1 N tx_data [4] $end
$var wire 1 O tx_data [3] $end
$var wire 1 P tx_data [2] $end
$var wire 1 Q tx_data [1] $end
$var wire 1 R tx_data [0] $end
$var wire 1 , clk $end
$var wire 1 - rst_n $end
$var reg 1 S MISO $end
$var reg 1 T rx_valid $end
$var reg 10 U rx_data [9:0] $end
$var reg 10 V shift_reg [9:0] $end
$var reg 8 W shift_reg_MISO [7:0] $end
$var reg 1 X load_shift_reg_MISO $end
$var reg 1 Y Has_Read_Address $end
$var reg 5 Z counter [4:0] $end
$var reg 1 [ din_MSB $end
$var reg 2 \ check_read_data_op [1:0] $end
$var reg 1 ] tx_valid_d $end
$var reg 3 ^ current_state [2:0] $end
$var reg 3 _ next_state [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0$
x%
x&
0'
x(
bx )
bx 1
bx 2
bx 3
04
x5
bx C
xD
bx E
bx F
b0 G
b0 H
0S
0T
bx U
bx V
bx W
xX
0Y
b0 Z
x[
bx \
x]
b0 ^
b0 _
b100000000 !
b1000 "
b1100100 #
b100000000 *
b1000 +
b100000000 6
b1000 7
b1000 I
x0
x.
x-
0,
0/
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
0B
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
$end
#50
1$
1,
#100
0$
0,
0%
0&
1(
0-
0.
10
b0 C
b0 F
0D
b0 V
b0 W
0]
b0 U
05
b0 2
b0 3
0R
0Q
0P
0O
0N
0M
0L
0K
0A
0@
0?
0>
0=
0<
0;
0:
09
08
b0 E
0J
#150
1$
1,
#200
0$
0,
#250
1$
1,
#300
0$
0,
1%
b11111111 )
0(
1-
00
b1 _
#350
1$
1,
b1 ^
b0 _
b10 _
#400
0$
0,
#450
1$
1,
b10 ^
b1 Z
b0 _
b10 _
#500
0$
0,
#550
1$
1,
1&
1.
b0 _
b10 _
b10 Z
b0 _
b10 _
#600
0$
0,
#650
1$
1,
b11 Z
b1 V
b1 U
b1 3
1A
b0 _
b10 _
#700
0$
0,
#750
1$
1,
b100 Z
b11 V
b11 U
b11 3
1@
b0 _
b10 _
#800
0$
0,
#850
1$
1,
b101 Z
b111 V
b111 U
b111 3
1?
b0 _
b10 _
#900
0$
0,
#950
1$
1,
b110 Z
b1111 V
b1111 U
b1111 3
1>
b0 _
b10 _
#1000
0$
0,
#1050
1$
1,
b111 Z
b11111 V
b11111 U
b11111 3
1=
b0 _
b10 _
#1100
0$
0,
#1150
1$
1,
b1000 Z
b111111 V
b111111 U
b111111 3
1<
b0 _
b10 _
#1200
0$
0,
#1250
1$
1,
b1001 Z
b1111111 V
b1111111 U
b1111111 3
1;
b0 _
b10 _
#1300
0$
0,
#1350
1$
1,
b1010 Z
b11111111 V
b11111111 U
b11111111 3
1:
b0 _
1T
14
1B
#1400
0$
0,
1(
10
0T
1T
#1450
1$
1,
b0 ^
b11111111 F
b0 Z
0T
04
0B
#1500
0$
0,
b111111101 )
0(
00
b1 _
#1550
1$
1,
0&
0.
b0 _
b1 _
b1 ^
b0 _
b10 _
#1600
0$
0,
#1650
1$
1,
1&
1.
b0 _
b101 _
b10 ^
b1 Z
b111111110 V
b111111110 U
b111111110 3
0A
19
b1 E
b0 _
b10 _
#1700
0$
0,
#1750
1$
1,
b10 Z
b1111111101 V
b1111111101 U
b1111111101 3
1A
0@
18
b11 E
b0 _
b10 _
#1800
0$
0,
#1850
1$
1,
b11 Z
b1111111011 V
b1111111011 U
b1111111011 3
1@
0?
b0 _
b10 _
#1900
0$
0,
#1950
1$
1,
b100 Z
b1111110111 V
b1111110111 U
b1111110111 3
1?
0>
